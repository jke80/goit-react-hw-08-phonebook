{"version":3,"file":"static/js/875.1245de70.chunk.js","mappings":"iSAWIA,GAAUC,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAC9C,IAAIC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAtB,EAAQC,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IADwB,gBAGtBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YACnCD,GALmB,IAMtB,MAAOH,IAGZ,IACDJ,EAAQ,YAAc,U,wBCXtB,EATiB,WACf,IAAMY,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAArBD,KAER,OACE,SAAC,IAAD,CAAQE,EAAE,QAAV,SAAmBL,GAAa,UAACH,EAAD,WAAS,iBAAeM,MAAkB,SAACN,EAAD,UAAS,mBAEtF,C,uHCNGS,GAASR,EAAAA,EAAAA,GAAO,MAAO,CACzBS,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAGpBJ,EAAOK,YAAc,SACrB,IAAIC,EAAe,CACjBC,WAAY,CACVC,WAAY,MACZC,UAAW,oBAEbC,SAAU,CACRC,IAAK,MACLF,UAAW,oBAEbG,KAAM,CACJJ,WAAY,MACZG,IAAK,MACLF,UAAW,2BAGM1B,EAAAA,EAAAA,IACnB,SAAyB8B,EAAO3B,GAC9B,MAAmC2B,EAA3BC,KAAAA,OAAR,MAAe,OAAf,EAA0BzB,GAA1B,OAAmCwB,EAAnC,GACA,OAAuBE,EAAAA,EAAAA,KACrBvB,EAAAA,EAAAA,KADwB,gBAGtBN,IAAAA,EACA,MAAOoB,EAAaQ,IACjBzB,GALmB,IAMtB,SAAU,aAGf,G","sources":["../node_modules/@chakra-ui/layout/src/heading.tsx","pages/HomePage/HomePage.jsx","../node_modules/@chakra-ui/layout/src/center.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { Center, Heading } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn, selectUser } from 'redux/auth/auth.selectors';\n\nconst HomePage = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const { name } = useSelector(selectUser);\n\n  return (\n    <Center h='100px'>{isLoggedIn ? <Heading>Welcome back, {name}</Heading> : <Heading>Please log in</Heading>}</Center>\n  );\n};\n\nexport default HomePage;\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"],"names":["props","forwardRef","styles","className","rest","useStyleConfig","omitThemingProps","__css","h2","Heading","chakra","cx","isLoggedIn","useSelector","selectIsLoggedIn","name","selectUser","h","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","AbsoluteCenter","axis","div","Center"],"sourceRoot":""}