{"version":3,"file":"static/js/935.a1d3ce06.chunk.js","mappings":"2fAaaA,EAAkB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QACxCC,EAAqBF,EAArBE,GAAIC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACZC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAEJ,KAAAA,EAAMC,OAAAA,IAA3C,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAAQC,EAAAA,EAAAA,KAERC,EAAe,SAAAC,GACnBJ,GAAS,kBAAKD,GAAN,cAAcK,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,QAChD,EAgBD,OACE,SAAC,IAAD,CAAWC,KAAK,QAAQC,YAAY,MAAMC,aAAa,KAAKC,EAAE,OAA9D,UACE,kBAAMC,SAhBW,SAAAP,GACnB,IAAQV,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OACdS,EAAEQ,iBACFhB,GAASiB,EAAAA,EAAAA,IAAa,CAAEpB,GAAAA,EAAIC,KAAAA,EAAMC,OAAAA,KAClCM,EAAM,CACJa,MAAO,gBACPC,YAAY,WAAD,OAAarB,EAAb,wBACXsB,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEd1B,GACD,EAIG,WACE,UAAC,IAAD,WAAW,QAET,SAAC,EAAA2B,EAAD,CACEC,SAAUjB,EACVG,MAAOP,EAAML,KACb2B,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRR,MAAM,yIACNS,UAAQ,QAGZ,UAAC,IAAD,WAAW,UAET,SAAC,EAAAJ,EAAD,CACEC,SAAUjB,EACVG,MAAOP,EAAMJ,OACb0B,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRR,MAAM,+FACNS,UAAQ,QAGZ,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,YAAY,OACZC,QAAQ,UACRJ,KAAK,SACLK,UAAU,SAAC,IAAD,IAJZ,SAKC,uBAOV,ECnDYC,EAAU,SAAC,GAAuC,IAAD,IAApCC,QAAWnC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,OACvCC,GAAWC,EAAAA,EAAAA,MACXI,GAAQC,EAAAA,EAAAA,KACd,GAAoC2B,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQvC,EAAxB,EAAwBA,QAaxB,OACE,iCACE,UAAC,KAAD,YACE,UAAC,IAAD,CAAQwC,QAAS,EAAGC,MAAM,UAA1B,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQC,KAAK,KAAKxC,KAAMA,KACxB,UAAC,IAAD,WAAOA,EAAK,WAEd,UAAC,IAAD,YACE,SAAC,IAAD,KAEA,SAAC,IAAD,UAAOC,KACP,SAAC,IAAD,KACA,SAAC,IAAD,CAASwC,MAAM,eAAf,UACE,SAAC,IAAD,CACEX,YAAY,OACZC,QAAQ,UACRJ,KAAK,SACLa,KAAK,KACL,aAAW,eACXE,MAAM,SAAC,IAAD,IACNC,QAASN,OAIb,SAAC,IAAD,CAASI,MAAM,iBAAf,UACE,SAAC,IAAD,CACEX,YAAY,OACZC,QAAQ,UACRJ,KAAK,SACLa,KAAK,KACL,aAAW,iBACXE,MAAM,SAAC,IAAD,IACNC,QA5CO,WACnBzC,GAAS0C,EAAAA,EAAAA,IAAc7C,IACvBQ,EAAM,CACJa,MAAO,kBACPC,YAAY,+BACZC,OAAQ,UACRC,SAAU,IACVC,YAAY,GAEf,aAwCK,SAAC,IAAD,QAGF,UAAC,KAAD,CAAOY,OAAQA,EAAQtC,QAASA,EAAhC,WACE,SAAC,IAAD,KACA,UAAC,IAAD,YACE,SAAC,IAAD,KACA,SAAC,IAAD,WACE,SAACF,EAAD,CACEC,eAAgB,CAAEE,GAAAA,EAAIC,KAAAA,EAAMC,OAAAA,GAC5BH,QAASA,cAOtB,EAEDmC,EAAQY,SAAW,CACjBX,QAASY,IAAAA,MAAgB,CACvB/C,GAAI+C,IAAAA,OAAAA,WACJ9C,KAAM8C,IAAAA,OAAAA,WACNC,MAAOD,IAAAA,OAAAA,aACNE,Y,cCtGQC,EAAiB,SAAC5C,GAAD,OAAUA,EAAM6C,SAASC,KAAzB,EACjBC,EAAkB,SAAC/C,GAAD,OAASA,EAAM6C,SAASG,SAAxB,EAClBC,EAAc,SAACjD,GAAD,OAASA,EAAM6C,SAASK,KAAxB,EACdC,EAAe,SAACnD,GAAD,OAASA,EAAMoD,MAAf,EAEfC,GAAwBC,EAAAA,EAAAA,IAAe,CAACV,EAAgBO,IACjE,SAACN,EAAUO,GAAX,OAAqBP,EAASO,QAAO,SAAAvB,GAAO,OACxCA,EAAQlC,KAAK4D,cAAcC,SAASJ,EAAOG,cADH,GAA5C,ICFSE,EAAc,WACzB,IAAMZ,GAAWa,EAAAA,EAAAA,IAAYL,GAE7B,OACE,SAAC,IAAD,CAAWM,EAAE,OAAb,UACE,SAAC,KAAD,CAAa1B,QAAS,EAAtB,SACGY,EAASe,KAAI,SAAA/B,GAAO,OACnB,SAACD,EAAD,CAA0BC,QAASA,GAArBA,EAAQnC,GADH,OAM5B,E,UCXYmE,EAAS,WACpB,IAAMT,GAASM,EAAAA,EAAAA,IAAYP,GACrBtD,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,IAAD,CAAWU,KAAK,QAAhB,UACE,UAAC,IAAD,WAAW,yBAET,SAAC,EAAAY,EAAD,CACEC,SAPa,SAAAhB,GAAC,OAAIR,GAASiE,EAAAA,EAAAA,GAAUzD,EAAEC,OAAOC,OAAhC,EAQdA,MAAO6C,EACP9B,KAAK,OACL3B,KAAK,SACL4B,QAAQ,yHACRR,MAAM,yIACNS,UAAQ,QAKjB,E,UCfKuC,EAAgB,CACpBpE,KAAM,GACNC,OAAQ,IAGGoE,EAAiB,SAAC,GAAiB,IAAfvE,EAAc,EAAdA,QACzBoD,GAAWa,EAAAA,EAAAA,IAAYd,GACvB/C,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAASgE,GAAnC,eAAO/D,EAAP,KAAcC,EAAd,KACMC,GAAQC,EAAAA,EAAAA,KAERC,EAAe,SAAAC,GACnBJ,GAAS,kBAAKD,GAAN,cAAcK,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,QAChD,EA4BD,OACE,SAAC,IAAD,CAAWC,KAAK,QAAQC,YAAY,MAAMC,aAAa,KAAKC,EAAE,OAA9D,UACE,kBAAMC,SA5BW,SAAAP,GACnB,IAAQV,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OACdS,EAAEQ,iBAEEgC,EAASoB,MAAK,SAAApC,GAAO,OAAIA,EAAQlC,OAASA,CAArB,IACvBO,EAAM,CACJa,MAAO,eACPC,YAAY,GAAD,OAAKrB,EAAL,2BACXsB,OAAQ,QACRC,SAAU,IACVC,YAAY,KAIhBtB,GAASqE,EAAAA,EAAAA,IAAW,CAAEvE,KAAAA,EAAMC,OAAAA,KAC5BM,EAAM,CACJa,MAAO,eACPC,YAAY,WAAD,OAAarB,EAAb,uBACXsB,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEdlB,EAAS8D,GACTtE,IACD,EAIG,WACE,UAAC,IAAD,WAAW,QAET,SAAC,EAAA2B,EAAD,CACEC,SAAUjB,EACVG,MAAOP,EAAML,KACb2B,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRR,MAAM,yIACNS,UAAQ,QAGZ,UAAC,IAAD,WAAW,UAET,SAAC,EAAAJ,EAAD,CACEC,SAAUjB,EACVG,MAAOP,EAAMJ,OACb0B,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRR,MAAM,+FACNS,UAAQ,QAGZ,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,YAAY,OACZC,QAAQ,UACRJ,KAAK,SACLK,UAAU,SAAC,IAAD,IAJZ,SAKC,sBAOV,E,OC/BD,EAxCqB,WACnB,IAAM9B,GAAWC,EAAAA,EAAAA,MACjB,GAAoCgC,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQvC,EAAxB,EAAwBA,SACxB0E,EAAAA,EAAAA,YAAU,WACRtE,GAASuE,EAAAA,EAAAA,MACV,GAAE,CAACvE,IAEJ,IAAMgD,GAAWa,EAAAA,EAAAA,IAAYd,GAEvBI,GAAYU,EAAAA,EAAAA,IAAYX,GACxBG,GAAQQ,EAAAA,EAAAA,IAAYT,GAE1B,OACE,iCACE,SAAC,IAAD,WACE,SAAC,IAAD,CACExB,YAAY,OACZC,QAAQ,UACRY,QAASN,EACTL,UAAU,SAAC,IAAD,IAJZ,SAKC,mBAIH,UAAC,KAAD,CAAOI,OAAQA,EAAQtC,QAASA,EAAhC,WACE,SAAC,IAAD,KACA,UAAC,IAAD,YACE,SAAC,IAAD,KACA,SAAC,IAAD,WACE,SAACuE,EAAD,CAAgBvE,QAASA,cAI7B,OAACoD,QAAD,IAACA,IAAAA,EAAUwB,UAAU,SAACR,EAAD,IACtBb,IAAcE,IAAS,SAACoB,EAAA,EAAD,KACxB,SAACb,EAAD,MAGL,C","sources":["components/EditContactForm/EditContactForm.jsx","components/Contact/Contact.jsx","redux/contacts/contacts.selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/AddContactForm/AddContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { patchContact } from 'redux/contacts/contacts.thunk';\nimport {\n  Button,\n  Center,\n  Container,\n  FormLabel,\n  Input,\n  useToast,\n} from '@chakra-ui/react';\nimport { EditIcon } from '@chakra-ui/icons';\n\nexport const EditContactForm = ({ patchedContact, onClose }) => {\n  const { id, name, number } = patchedContact;\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ name, number });\n  const toast = useToast();\n\n  const handelChange = e => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const handelSubmit = e => {\n    const { name, number } = state;\n    e.preventDefault();\n    dispatch(patchContact({ id, name, number }));\n    toast({\n      title: 'Edit contact.',\n      description: `Contact ${name} edited successfully`,\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n    onClose();\n  };\n\n  return (\n    <Container maxW=\"300px\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"10px\">\n      <form onSubmit={handelSubmit}>\n        <FormLabel>\n          Name\n          <Input\n            onChange={handelChange}\n            value={state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Input\n            onChange={handelChange}\n            value={state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <Center>\n          <Button\n            colorScheme=\"blue\"\n            variant=\"outline\"\n            type=\"submit\"\n            leftIcon={<EditIcon />}\n          >\n            Edit Contact\n          </Button>\n        </Center>\n      </form>\n    </Container>\n  );\n};\n","import PropTypes from 'prop-types';\n\n// import { ContactStyled } from './ContactStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.thunk';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalOverlay,\n  Spacer,\n  Text,\n  Tooltip,\n  VStack,\n  Wrap,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\nimport { DeleteIcon, EditIcon, PhoneIcon } from '@chakra-ui/icons';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nexport const Contact = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handelDelete = () => {\n    dispatch(deleteContact(id));\n    toast({\n      title: 'Delete contact.',\n      description: `Contact deleted successfully`,\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <>\n      <ListItem>\n        <VStack spacing={4} align=\"stretch\">\n          <Wrap>\n            <Avatar size=\"xs\" name={name} />\n            <Text>{name} </Text>\n          </Wrap>\n          <Wrap>\n            <PhoneIcon />\n\n            <Text>{number}</Text>\n            <Spacer />\n            <Tooltip label=\"Edit contact\">\n              <IconButton\n                colorScheme=\"blue\"\n                variant=\"outline\"\n                type=\"button\"\n                size=\"xs\"\n                aria-label=\"Edit contact\"\n                icon={<EditIcon />}\n                onClick={onOpen}\n              />\n            </Tooltip>\n\n            <Tooltip label=\"Delete contact\">\n              <IconButton\n                colorScheme=\"blue\"\n                variant=\"outline\"\n                type=\"button\"\n                size=\"xs\"\n                aria-label=\"Delete contact\"\n                icon={<DeleteIcon />}\n                onClick={handelDelete}\n              />\n            </Tooltip>\n          </Wrap>\n        </VStack>\n        <Divider />\n      </ListItem>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalCloseButton />\n          <ModalBody>\n            <EditContactForm\n              patchedContact={{ id, name, number }}\n              onClose={onClose}\n            />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nContact.propType = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = (state)=> state.contacts.items;\nexport const selectIsLoading = (state)=>state.contacts.isLoading;\nexport const selectError = (state)=>state.contacts.error;\nexport const selectFilter = (state)=>state.filter;\n\nexport const selectFilteredContacts= createSelector([selectContacts, selectFilter], \n    (contacts, filter)=> contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n);","//import { ContactListStyled } from './ContactListStyled';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectFilteredContacts } from 'redux/contacts/contacts.selectors';\nimport { useSelector } from 'react-redux';\nimport { Container, OrderedList } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Container w='100%'>\n      <OrderedList spacing={5}>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </OrderedList>\n    </Container>\n  );\n};\n","import { Container, FormLabel, Input } from '@chakra-ui/react';\n//import { FilterStyled } from './FilterStyled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { setFilter } from 'components/Redux/actions';\nimport { selectFilter } from 'redux/contacts/contacts.selectors';\nimport { setFilter } from 'redux/filter/filter.slice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handelChange = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <Container maxW='300px'>\n      <FormLabel>\n        Find contacts by name\n        <Input\n          onChange={handelChange}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\nimport { addContact } from 'redux/contacts/contacts.thunk';\nimport {\n  Button,\n  Center,\n  Container,\n  FormLabel,\n  Input,\n  useToast,\n} from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport const AddContactForm = ({ onClose }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [state, setState] = useState(INITIAL_STATE);\n  const toast = useToast();\n\n  const handelChange = e => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const handelSubmit = e => {\n    const { name, number } = state;\n    e.preventDefault();\n\n    if (contacts.some(contact => contact.name === name)) {\n      toast({\n        title: 'Add contact.',\n        description: `${name} is already in contacts`,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    toast({\n      title: 'Add contact.',\n      description: `Contact ${name} added successfully`,\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n    setState(INITIAL_STATE);\n    onClose();\n  };\n\n  return (\n    <Container maxW=\"300px\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"10px\">\n      <form onSubmit={handelSubmit}>\n        <FormLabel>\n          Name\n          <Input\n            onChange={handelChange}\n            value={state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Input\n            onChange={handelChange}\n            value={state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <Center>\n          <Button\n            colorScheme=\"blue\"\n            variant=\"outline\"\n            type=\"submit\"\n            leftIcon={<AddIcon />}\n          >\n            Add Contact\n          </Button>\n        </Center>\n      </form>\n    </Container>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { Loading } from 'components/Loading/Loading';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts.selectors';\nimport { fetchContacts } from 'redux/contacts/contacts.thunk';\nimport {\n  Button,\n  Center,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalOverlay,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Center>\n        <Button\n          colorScheme=\"blue\"\n          variant=\"outline\"\n          onClick={onOpen}\n          leftIcon={<AddIcon />}\n        >\n          Add contact\n        </Button>\n      </Center>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalCloseButton />\n          <ModalBody>\n            <AddContactForm onClose={onClose} />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n      {!!contacts?.length && <Filter />}\n      {isLoading && !error && <Loading />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["EditContactForm","patchedContact","onClose","id","name","number","dispatch","useDispatch","useState","state","setState","toast","useToast","handelChange","e","target","value","maxW","borderWidth","borderRadius","p","onSubmit","preventDefault","patchContact","title","description","status","duration","isClosable","I","onChange","type","pattern","required","colorScheme","variant","leftIcon","Contact","contact","useDisclosure","isOpen","onOpen","spacing","align","size","label","icon","onClick","deleteContact","propType","PropTypes","phone","isRequired","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","toLowerCase","includes","ContactList","useSelector","w","map","Filter","setFilter","INITIAL_STATE","AddContactForm","some","addContact","useEffect","fetchContacts","length","Loading"],"sourceRoot":""}