{"version":3,"file":"static/js/815.437aec2a.chunk.js","mappings":"iUAeaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,KACRC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cAFI,kBAIVR,GACLS,EAAAA,EAAAA,IAAa,CACXC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAEnCG,SAVe,OAYjBb,EAAM,CACJc,MAAO,eACPC,YAAY,eACZC,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEdpB,GACEqB,EAAAA,EAAAA,IAAU,CACRR,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAtBpB,gDA0BjBV,EAAM,CACJc,MAAO,eACPC,YAAY,sBACZC,OAAQ,QACRC,SAAU,IACVC,YAAY,IAEdE,QAAQC,IAAI,WAAZ,MAjCiB,QAoCnBhB,EAAKiB,QApCc,yDAAH,sDAuClB,OACE,SAAC,IAAD,CAAWC,KAAK,QAAQC,YAAY,MAAMC,aAAa,KAAKC,EAAE,OAA9D,UACE,kBAAMC,SAAUzB,EAAc0B,aAAa,MAA3C,WACE,UAAC,IAAD,WAAW,YAET,SAAC,EAAAC,EAAD,CAAOC,KAAK,OAAOtB,KAAK,aAE1B,UAAC,IAAD,WAAW,SAET,SAAC,EAAAqB,EAAD,CAAOC,KAAK,QAAQtB,KAAK,cAE3B,UAAC,IAAD,WAAW,YAET,SAAC,IAAD,CAASuB,MAAM,mDAAmDC,KAAK,KAAvE,UACE,SAAC,EAAAH,EAAD,CAAOC,KAAK,WAAWtB,KAAK,mBAIhC,SAAC,IAAD,WACE,SAAC,IAAD,CAAQyB,YAAY,OAAOC,QAAQ,UAAUJ,KAAK,SAAlD,UACE,SAAC,IAAD,UAAM,qBAMjB,EC/ED,EAHqB,WACnB,OAAO,SAACjC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import {\n  Button,\n  Center,\n  Container,\n  FormLabel,\n  Input,\n  Text,\n  Tooltip,\n  useToast,\n} from '@chakra-ui/react';\n// import { Loading } from 'components/Loading/Loading';\nimport { useDispatch } from 'react-redux';\n// import { selectIsLoading } from 'redux/auth/auth.selectors';\nimport { authLogin, authRegister } from 'redux/auth/auth.thunk';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n  const toast = useToast();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    try {\n       await dispatch(\n        authRegister({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      \n      toast({\n        title: 'Create user.',\n        description: `User created`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n      dispatch(\n        authLogin({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n    } catch (e) {\n      toast({\n        title: 'Create user.',\n        description: `User creation error`,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      })\n      console.log('rejected', e);\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Container maxW=\"300px\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"10px\">\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormLabel>\n          Username\n          <Input type=\"text\" name=\"name\" />\n        </FormLabel>\n        <FormLabel>\n          Email\n          <Input type=\"email\" name=\"email\" />\n        </FormLabel>\n        <FormLabel>\n          Password\n          <Tooltip label='Passwords must contain at least seven characters' size='xs'>\n            <Input type=\"password\" name=\"password\"/>\n          </Tooltip>\n          \n        </FormLabel>\n        <Center>\n          <Button colorScheme=\"blue\" variant=\"outline\" type=\"submit\">\n            <Text>Register</Text>\n          </Button>\n        </Center>\n      </form>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","toast","useToast","handleSubmit","e","preventDefault","form","currentTarget","authRegister","name","elements","value","email","password","unwrap","title","description","status","duration","isClosable","authLogin","console","log","reset","maxW","borderWidth","borderRadius","p","onSubmit","autoComplete","I","type","label","size","colorScheme","variant"],"sourceRoot":""}